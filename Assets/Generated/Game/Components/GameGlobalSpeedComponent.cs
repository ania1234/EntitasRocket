//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity globalSpeedEntity { get { return GetGroup(GameMatcher.GlobalSpeed).GetSingleEntity(); } }
    public GlobalSpeedComponent globalSpeed { get { return globalSpeedEntity.globalSpeed; } }
    public bool hasGlobalSpeed { get { return globalSpeedEntity != null; } }

    public GameEntity SetGlobalSpeed(float newGlobalSpeed) {
        if (hasGlobalSpeed) {
            throw new Entitas.EntitasException("Could not set GlobalSpeed!\n" + this + " already has an entity with GlobalSpeedComponent!",
                "You should check if the context already has a globalSpeedEntity before setting it or use context.ReplaceGlobalSpeed().");
        }
        var entity = CreateEntity();
        entity.AddGlobalSpeed(newGlobalSpeed);
        return entity;
    }

    public void ReplaceGlobalSpeed(float newGlobalSpeed) {
        var entity = globalSpeedEntity;
        if (entity == null) {
            entity = SetGlobalSpeed(newGlobalSpeed);
        } else {
            entity.ReplaceGlobalSpeed(newGlobalSpeed);
        }
    }

    public void RemoveGlobalSpeed() {
        globalSpeedEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GlobalSpeedComponent globalSpeed { get { return (GlobalSpeedComponent)GetComponent(GameComponentsLookup.GlobalSpeed); } }
    public bool hasGlobalSpeed { get { return HasComponent(GameComponentsLookup.GlobalSpeed); } }

    public void AddGlobalSpeed(float newGlobalSpeed) {
        var index = GameComponentsLookup.GlobalSpeed;
        var component = (GlobalSpeedComponent)CreateComponent(index, typeof(GlobalSpeedComponent));
        component.globalSpeed = newGlobalSpeed;
        AddComponent(index, component);
    }

    public void ReplaceGlobalSpeed(float newGlobalSpeed) {
        var index = GameComponentsLookup.GlobalSpeed;
        var component = (GlobalSpeedComponent)CreateComponent(index, typeof(GlobalSpeedComponent));
        component.globalSpeed = newGlobalSpeed;
        ReplaceComponent(index, component);
    }

    public void RemoveGlobalSpeed() {
        RemoveComponent(GameComponentsLookup.GlobalSpeed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGlobalSpeed;

    public static Entitas.IMatcher<GameEntity> GlobalSpeed {
        get {
            if (_matcherGlobalSpeed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GlobalSpeed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGlobalSpeed = matcher;
            }

            return _matcherGlobalSpeed;
        }
    }
}
